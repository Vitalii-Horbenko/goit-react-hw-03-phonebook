{"version":3,"sources":["components/App/App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm..js","components/Filter/Filter.js","components/ContactsListItem/ContactsListItem.js","components/ContactList/ContactList.js","components/App/App.js","index.js","components/ContactsListItem/ListItem.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","className","styles","form","label","type","pattern","title","required","onChange","addBtn","Component","Filter","filterLabel","ContactsListItem","items","onDeleteContact","map","contact","contactName","deleteBtn","onClick","id","uuidv4","ContactList","contacts","style","padding","App","filter","addContact","findIndex","newContact","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fd4641b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2iGXM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__15ztZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2kDpT\",\"addBtn\":\"ContactForm_addBtn__3IBk-\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.addBtn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nexport const Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <label className={styles.filterLabel}>\r\n        Find contacts by name\r\n        <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ListItem.module.css\";\r\n\r\nconst ContactsListItem = ({ items, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      {items.map((contact) => {\r\n        return (\r\n          <li key={uuidv4()} className={styles.contactName}>\r\n            {`${contact.name}: ${contact.number}`}\r\n            <button\r\n              className={styles.deleteBtn}\r\n              type=\"button\"\r\n              name=\"delete\"\r\n              onClick={() => onDeleteContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nContactsListItem.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import React from \"react\";\r\nimport ContactsListItem from \"../ContactsListItem\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      <ul style={{ padding: \"0px\" }}>\r\n        <ContactsListItem items={contacts} onDeleteContact={onDeleteContact} />\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from \"./App.module.css\";\r\nimport ContactForm from \"../ContactForm\";\r\nimport Filter from \"../Filter\";\r\nimport ContactList from \"../ContactList\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    if (\r\n      this.state.contacts.findIndex((contact) => contact.name === name) !== -1\r\n    ) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [newContact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  changeFilter = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.app}>\r\n        <h1 className=\"title\">Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2 className=\"title\">Contacts</h2>\r\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={this.getVisibleContacts()}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"ListItem_deleteBtn__3gc6Q\",\"contactName\":\"ListItem_contactName__230He\"};"],"sourceRoot":""}